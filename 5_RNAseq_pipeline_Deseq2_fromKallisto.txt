#without Sleuth but DESeq2
#install lib####
source("http://bioconductor.org/biocLite.R")


BiocManager::install("DESeq2")
BiocManager::install("ggstatsplot")
install.packages("RSQLite")
library('DESeq2')
library(ggstatsplot)
#TPM=Transcripts Per Million

library(data.table)
setwd("/Volumes/RNAseq2016_2/kallisto2021V4/quantification")
base_dir<- "/Volumes/RNAseq2016_2/kallisto2021V4/quantification"
getwd()

#######

#Prepare to create a count data table####

{ #read the quantification files  
  setwd("/Volumes/RNAseq2016_2/Kallisto2021V4/quantification")
  Kallisto_lib1<-read.table("/Volumes/RNAseq2016_2/kallisto2021V4/quantification/Lib1/abundance.tsv",fill=T,skip=0, header=T)
  View(Kallisto_lib1)
  
  setwd("/Volumes/RNAseq2016_2/Kallisto2021V4/quantification")
  Kallisto_lib2<-read.table("/Volumes/RNAseq2016_2/kallisto2021V4/quantification/Lib2/abundance.tsv",fill=T,skip=0, header=T)
  View(Kallisto_lib2)
  
  setwd("/Volumes/RNAseq2016_2/Kallisto2021V4/quantification")
  Kallisto_lib3<-read.table("/Volumes/RNAseq2016_2/kallisto2021V4/quantification/Lib3/abundance.tsv",fill=T,skip=0, header=T)
  View(Kallisto_lib3)
  
  setwd("/Volumes/RNAseq2016_2/Kallisto2021V4/quantification")
  Kallisto_lib4<-read.table("/Volumes/RNAseq2016_2/kallisto2021V4/quantification/Lib4/abundance.tsv",fill=T,skip=0, header=T)
  View(Kallisto_lib4)
  
  setwd("/Volumes/RNAseq2016_2/Kallisto2021V4/quantification")
  Kallisto_lib5<-read.table("/Volumes/RNAseq2016_2/kallisto2021V4/quantification/Lib5/abundance.tsv",fill=T,skip=0, header=T)
  View(Kallisto_lib5)
  
  setwd("/Volumes/RNAseq2016_2/Kallisto2021V4/quantification")
  Kallisto_lib6<-read.table("/Volumes/RNAseq2016_2/kallisto2021V4/quantification/Lib6/abundance.tsv",fill=T,skip=0, header=T)
  View(Kallisto_lib6)
  
  setwd("/Volumes/RNAseq2016_2/Kallisto2021V4/quantification")
  Kallisto_lib7<-read.table("/Volumes/RNAseq2016_2/kallisto2021V4/quantification/Lib7/abundance.tsv",fill=T,skip=0, header=T)
  View(Kallisto_lib7)
  
  setwd("/Volumes/RNAseq2016_2/Kallisto2021V4/quantification")
  Kallisto_lib8<-read.table("/Volumes/RNAseq2016_2/kallisto2021V4/quantification/Lib8/abundance.tsv",fill=T,skip=0, header=T)
  View(Kallisto_lib8)
  
  setwd("/Volumes/RNAseq2016_2/Kallisto2021V4/quantification")
  Kallisto_lib9<-read.table("/Volumes/RNAseq2016_2/kallisto2021V4/quantification/Lib9/abundance.tsv",fill=T,skip=0, header=T)
  View(Kallisto_lib9)
  
  setwd("/Volumes/RNAseq2016_2/Kallisto2021V4/quantification")
  Kallisto_lib10<-read.table("/Volumes/RNAseq2016_2/kallisto2021V4/quantification/Lib10/abundance.tsv",fill=T,skip=0, header=T)
  View(Kallisto_lib0)
  
  setwd("/Volumes/RNAseq2016_2/kallisto2021V4/quantification")
  Kallisto_lib11<-read.table("/Volumes/RNAseq2016_2/kallisto2021V4/quantification/Lib11/abundance.tsv",fill=T,skip=0, header=T)
  View(Kallisto_lib11)
  setwd("/Volumes/RNAseq2016_2/kallisto2021V4/quantification")
  Kallisto_lib12<-read.table("/Volumes/RNAseq2016_2/kallisto2021V4/quantification/Lib12/abundance.tsv",fill=T,skip=0, header=T)
  View(Kallisto_lib12)
  setwd("/Volumes/RNAseq2016_2/kallisto2021V4/quantification")
  Kallisto_lib13<-read.table("/Volumes/RNAseq2016_2/kallisto2021V4/quantification/Lib13/abundance.tsv",fill=T,skip=0, header=T)
  View(Kallisto_lib13)
  
  
  setwd("/Volumes/RNAseq2016_2/kallisto2021V4/quantification")
  Kallisto_lib14<-read.table("/Volumes/RNAseq2016_2/kallisto2021V4/quantification/Lib14/abundance.tsv",fill=T,skip=0, header=T)
  View(Kallisto_lib14)
  setwd("/Volumes/RNAseq2016_2/kallisto2021V4/quantification")
  Kallisto_lib15<-read.table("/Volumes/RNAseq2016_2/kallisto2021V4/quantification/Lib15/abundance.tsv",fill=T,skip=0, header=T)
  View(Kallisto_lib15)
  setwd("/Volumes/RNAseq2016_2/kallisto2021V4/quantification")
  Kallisto_lib16<-read.table("/Volumes/RNAseq2016_2/kallisto2021V4/quantification/Lib16/abundance.tsv",fill=T,skip=0, header=T)
  View(Kallisto_lib16)
  
  setwd("/Volumes/RNAseq2016_2/kallisto2021V4/quantification")
  Kallisto_lib17<-read.table("/Volumes/RNAseq2016_2/kallisto2021V4/quantification/Lib17/abundance.tsv",fill=T,skip=0, header=T)
  View(Kallisto_lib17)
  setwd("/Volumes/RNAseq2016_2/kallisto2021V4/quantification")
  Kallisto_lib18<-read.table("/Volumes/RNAseq2016_2/kallisto2021V4/quantification/Lib18/abundance.tsv",fill=T,skip=0, header=T)
  View(Kallisto_lib18)
  
  setwd("/Volumes/RNAseq2016_2/kallisto2021V4/quantification")
  Kallisto_lib19<-read.table("/Volumes/RNAseq2016_2/kallisto2021V4/quantification/Lib19/abundance.tsv",fill=T,skip=0, header=T)
  View(Kallisto_lib19)
  setwd("/Volumes/RNAseq2016_2/kallisto2021V4/quantification")
  Kallisto_lib20<-read.table("/Volumes/RNAseq2016_2/kallisto2021V4/quantification/Lib20/abundance.tsv",fill=T,skip=0, header=T)
  View(Kallisto_lib20)
  setwd("/Volumes/RNAseq2016_2/kallisto2021V4/quantification")
  Kallisto_lib21<-read.table("/Volumes/RNAseq2016_2/kallisto2021V4/quantification/Lib21/abundance.tsv",fill=T,skip=0, header=T)
  View(Kallisto_lib21)
  
  setwd("/Volumes/RNAseq2016_2/kallisto2021V4/quantification")
  Kallisto_lib22<-read.table("/Volumes/RNAseq2016_2/kallisto2021V4/quantification/Lib22/abundance.tsv",fill=T,skip=0, header=T)
  View(Kallisto_lib22)
  setwd("/Volumes/RNAseq2016_2/kallisto2021V4/quantification")
  Kallisto_lib23<-read.table("/Volumes/RNAseq2016_2/kallisto2021V4/quantification/Lib23/abundance.tsv",fill=T,skip=0, header=T)
  View(Kallisto_lib23)
  setwd("/Volumes/RNAseq2016_2/kallisto2021V4/quantification")
  Kallisto_lib24<-read.table("/Volumes/RNAseq2016_2/kallisto2021V4/quantification/Lib24/abundance.tsv",fill=T,skip=0, header=T)
  View(Kallisto_lib24)
  
  setwd("/Volumes/RNAseq2016_2/kallisto2021V4/quantification")
  Kallisto_lib25<-read.table("/Volumes/RNAseq2016_2/kallisto2021V4/quantification/Lib25/abundance.tsv",fill=T,skip=0, header=T)
  View(Kallisto_lib25)
  
  setwd("/Volumes/RNAseq2016_2/kallisto2021V4/quantification")
  Kallisto_lib26<-read.table("/Volumes/RNAseq2016_2/kallisto2021V4/quantification/Lib26/abundance.tsv",fill=T,skip=0, header=T)
  View(Kallisto_lib26)
  setwd("/Volumes/RNAseq2016_2/kallisto2021V4/quantification")
  Kallisto_lib27<-read.table("/Volumes/RNAseq2016_2/kallisto2021V4/quantification/Lib27/abundance.tsv",fill=T,skip=0, header=T)
  View(Kallisto_lib27)
  setwd("/Volumes/RNAseq2016_2/kallisto2021V4/quantification")
  Kallisto_lib28<-read.table("/Volumes/RNAseq2016_2/kallisto2021V4/quantification/Lib28/abundance.tsv",fill=T,skip=0, header=T)
  View(Kallisto_lib28)
  
  setwd("/Volumes/RNAseq2016_2/kallisto2021V4/quantification")
  Kallisto_lib29<-read.table("/Volumes/RNAseq2016_2/kallisto2021V4/quantification/Lib29/abundance.tsv",fill=T,skip=0, header=T)
  View(Kallisto_lib29)
  setwd("/Volumes/RNAseq2016_2/kallisto2021V4/quantification")
  Kallisto_lib30<-read.table("/Volumes/RNAseq2016_2/kallisto2021V4/quantification/Lib30/abundance.tsv",fill=T,skip=0, header=T)
  View(Kallisto_lib30)
  setwd("/Volumes/RNAseq2016_2/kallisto2021V4/quantification")
  Kallisto_lib31<-read.table("/Volumes/RNAseq2016_2/kallisto2021V4/quantification/Lib31/abundance.tsv",fill=T,skip=0, header=T)
  View(Kallisto_lib31)
  setwd("/Volumes/RNAseq2016_2/kallisto2021V4/quantification")
  Kallisto_lib32<-read.table("/Volumes/RNAseq2016_2/kallisto2021V4/quantification/Lib32_rawreads/abundance.tsv",fill=T,skip=0, header=T)
  View(Kallisto_lib32)
  setwd("/Volumes/RNAseq2016_2/kallisto2021V4/quantification")
  Kallisto_lib33<-read.table("/Volumes/RNAseq2016_2/kallisto2021V4/quantification/Lib33/abundance.tsv",fill=T,skip=0, header=T)
  View(Kallisto_lib33)
  setwd("/Volumes/RNAseq2016_2/kallisto2021V4/quantification")
  Kallisto_lib34<-read.table("/Volumes/RNAseq2016_2/kallisto2021V4/quantification/Lib34/abundance.tsv",fill=T,skip=0, header=T)
  View(Kallisto_lib34)
  
  
  setwd("/Volumes/RNAseq2016_2/kallisto2021V4/quantification")
  Kallisto_lib35<-read.table("/Volumes/RNAseq2016_2/kallisto2021V4/quantification/Lib35/abundance.tsv",fill=T,skip=0, header=T)
  View(Kallisto_lib35)
  setwd("/Volumes/RNAseq2016_2/kallisto2021V4/quantification")
  Kallisto_lib36<-read.table("/Volumes/RNAseq2016_2/kallisto2021V4/quantification/Lib36_rawreads/abundance.tsv",fill=T,skip=0, header=T)
  View(Kallisto_lib36)
  setwd("/Volumes/RNAseq2016_2/kallisto2021V4/quantification")
  Kallisto_lib37<-read.table("/Volumes/RNAseq2016_2/kallisto2021V4/quantification/Lib37/abundance.tsv",fill=T,skip=0, header=T)
  View(Kallisto_lib37)
  setwd("/Volumes/RNAseq2016_2/kallisto2021V4/quantification")
  Kallisto_lib38<-read.table("/Volumes/RNAseq2016_2/kallisto2021V4/quantification/Lib38/abundance.tsv",fill=T,skip=0, header=T)
  View(Kallisto_lib38)
  
  setwd("/Volumes/RNAseq2016_2/kallisto2021V4/quantification")
  Kallisto_lib39<-read.table("/Volumes/RNAseq2016_2/kallisto2021V4/quantification/Lib39/abundance.tsv",fill=T,skip=0, header=T)
  View(Kallisto_lib39)
  
  setwd("/Volumes/RNAseq2016_2/kallisto2021V4/quantification")
  Kallisto_lib40<-read.table("/Volumes/RNAseq2016_2/kallisto2021V4/quantification/Lib40/abundance.tsv",fill=T,skip=0, header=T)
  View(Kallisto_lib40)
  setwd("/Volumes/RNAseq2016_2/kallisto2021V4/quantification")
  Kallisto_lib41<-read.table("/Volumes/RNAseq2016_2/kallisto2021V4/quantification/Lib41/abundance.tsv",fill=T,skip=0, header=T)
  View(Kallisto_lib41)
  
  setwd("/Volumes/RNAseq2016_2/kallisto2021V4/quantification")
  Kallisto_lib42<-read.table("/Volumes/RNAseq2016_2/kallisto2021V4/quantification/Lib42/abundance.tsv",fill=T,skip=0, header=T)
  View(Kallisto_lib42)
  setwd("/Volumes/RNAseq2016_2/kallisto2021V4/quantification")
  Kallisto_lib43<-read.table("/Volumes/RNAseq2016_2/kallisto2021V4/quantification/Lib43/abundance.tsv",fill=T,skip=0, header=T)
  View(Kallisto_lib43)
  setwd("/Volumes/RNAseq2016_2/kallisto2021V4/quantification")
  Kallisto_lib44<-read.table("/Volumes/RNAseq2016_2/kallisto2021V4/quantification/Lib44/abundance.tsv",fill=T,skip=0, header=T)
  View(Kallisto_lib44)
  setwd("/Volumes/RNAseq2016_2/kallisto2021V4/quantification")
  Kallisto_lib45<-read.table("/Volumes/RNAseq2016_2/kallisto2021V4/quantification/Lib45/abundance.tsv",fill=T,skip=0, header=T)
  View(Kallisto_lib45)
  
  setwd("/Volumes/RNAseq2016_2/kallisto2021V4/quantification")
  Kallisto_lib46<-read.table("/Volumes/RNAseq2016_2/kallisto2021V4/quantification/Lib46/abundance.tsv",fill=T,skip=0, header=T)
  View(Kallisto_lib46)
  
  setwd("/Volumes/RNAseq2016_2/kallisto2021V4/quantification")
  Kallisto_lib47<-read.table("/Volumes/RNAseq2016_2/kallisto2021V4/quantification/Lib47/abundance.tsv",fill=T,skip=0, header=T)
  View(Kallisto_lib47)
  
  setwd("/Volumes/RNAseq2016_2/kallisto2021V4/quantification")
  Kallisto_lib48<-read.table("/Volumes/RNAseq2016_2/kallisto2021V4/quantification/Lib48/abundance.tsv",fill=T,skip=0, header=T)
  View(Kallisto_lib48)
}

{ 
  #choose the colomn in the file, make a directory matrix
  
  
  
  Kallisto_lib1$length <- NULL
  Kallisto_lib1$eff_length <- NULL
  Kallisto_lib1$tpm <- NULL
  Kallisto_lib1$est_counts <- round(Kallisto_lib1$est_counts)
  write.table(Kallisto_lib1, file="/Volumes/RNAseq2016_2/kallisto2021V4/quantification/matrix/Lib_1", row.names=FALSE, col.names=FALSE)
  
  Kallisto_lib2$length <- NULL
  Kallisto_lib2$eff_length <- NULL
  Kallisto_lib2$tpm <- NULL
  Kallisto_lib2$est_counts <- round(Kallisto_lib2$est_counts)
  write.table(Kallisto_lib2, file="/Volumes/RNAseq2016_2/kallisto2021V4/quantification/matrix/Lib_2", row.names=FALSE, col.names=FALSE)
  
  Kallisto_lib3$length <- NULL
  Kallisto_lib3$eff_length <- NULL
  Kallisto_lib3$tpm <- NULL
  Kallisto_lib3$est_counts <- round(Kallisto_lib3$est_counts)
  write.table(Kallisto_lib3, file="/Volumes/RNAseq2016_2/kallisto2021V4/quantification/matrix/Lib_3", row.names=FALSE, col.names=FALSE)
  
  Kallisto_lib4$length <- NULL
  Kallisto_lib4$eff_length <- NULL
  Kallisto_lib4$tpm <- NULL
  Kallisto_lib4$est_counts <- round(Kallisto_lib4$est_counts)
  write.table(Kallisto_lib4, file="/Volumes/RNAseq2016_2/kallisto2021V4/quantification/matrix/Lib_4", row.names=FALSE, col.names=FALSE)
  
  Kallisto_lib5$length <- NULL
  Kallisto_lib5$eff_length <- NULL
  Kallisto_lib5$tpm <- NULL
  Kallisto_lib5$est_counts <- round(Kallisto_lib5$est_counts)
  write.table(Kallisto_lib5, file="/Volumes/RNAseq2016_2/kallisto2021V4/quantification/matrix/Lib_5", row.names=FALSE, col.names=FALSE)
  
  Kallisto_lib6$length <- NULL
  Kallisto_lib6$eff_length <- NULL
  Kallisto_lib6$tpm <- NULL
  Kallisto_lib6$est_counts <- round(Kallisto_lib6$est_counts)
  write.table(Kallisto_lib6, file="/Volumes/RNAseq2016_2/kallisto2021V4/quantification/matrix/Lib_6", row.names=FALSE, col.names=FALSE)
  
  Kallisto_lib7$length <- NULL
  Kallisto_lib7$eff_length <- NULL
  Kallisto_lib7$tpm <- NULL
  Kallisto_lib7$est_counts <- round(Kallisto_lib7$est_counts)
  write.table(Kallisto_lib7, file="/Volumes/RNAseq2016_2/kallisto2021V4/quantification/matrix/Lib_7", row.names=FALSE, col.names=FALSE)
  
  Kallisto_lib8$length <- NULL
  Kallisto_lib8$eff_length <- NULL
  Kallisto_lib8$tpm <- NULL
  Kallisto_lib8$est_counts <- round(Kallisto_lib8$est_counts)
  write.table(Kallisto_lib8, file="/Volumes/RNAseq2016_2/kallisto2021V4/quantification/matrix/Lib_8", row.names=FALSE, col.names=FALSE)
  
  Kallisto_lib9$length <- NULL
  Kallisto_lib9$eff_length <- NULL
  Kallisto_lib9$tpm <- NULL
  Kallisto_lib9$est_counts <- round(Kallisto_lib9$est_counts)
  write.table(Kallisto_lib9, file="/Volumes/RNAseq2016_2/kallisto2021V4/quantification/matrix/Lib_9", row.names=FALSE, col.names=FALSE)
  
  Kallisto_lib10$length <- NULL
  Kallisto_lib10$eff_length <- NULL
  Kallisto_lib10$tpm <- NULL
  Kallisto_lib10$est_counts <- round(Kallisto_lib10$est_counts)
  write.table(Kallisto_lib10, file="/Volumes/RNAseq2016_2/kallisto2021V4/quantification/matrix/Lib_10", row.names=FALSE, col.names=FALSE)
  
  Kallisto_lib11$length <- NULL
  Kallisto_lib11$eff_length <- NULL
  Kallisto_lib11$tpm <- NULL
  Kallisto_lib11$est_counts <- round(Kallisto_lib11$est_counts)
  write.table(Kallisto_lib11, file="/Volumes/RNAseq2016_2/kallisto2021V4/quantification/matrix/Lib_11", row.names=FALSE, col.names=FALSE)
  
  Kallisto_lib12$length <- NULL
  Kallisto_lib12$eff_length <- NULL
  Kallisto_lib12$tpm <- NULL
  Kallisto_lib12$est_counts <- round(Kallisto_lib12$est_counts)
  write.table(Kallisto_lib12, file="/Volumes/RNAseq2016_2/kallisto2021V4/quantification/matrix/Lib_12", row.names=FALSE, col.names=FALSE)
  
  Kallisto_lib13$length <- NULL
  Kallisto_lib13$eff_length <- NULL
  Kallisto_lib13$tpm <- NULL
  Kallisto_lib13$est_counts <- round(Kallisto_lib13$est_counts)
  write.table(Kallisto_lib13, file="/Volumes/RNAseq2016_2/kallisto2021V4/quantification/matrix/Lib_13", row.names=FALSE, col.names=FALSE)
  
  Kallisto_lib14$length <- NULL
  Kallisto_lib14$eff_length <- NULL
  Kallisto_lib14$tpm <- NULL
  Kallisto_lib14$est_counts <- round(Kallisto_lib14$est_counts)
  write.table(Kallisto_lib14, file="/Volumes/RNAseq2016_2/kallisto2021V4/quantification/matrix/Lib_14", row.names=FALSE, col.names=FALSE)
  
  Kallisto_lib15$length <- NULL
  Kallisto_lib15$eff_length <- NULL
  Kallisto_lib15$tpm <- NULL
  Kallisto_lib15$est_counts <- round(Kallisto_lib15$est_counts)
  write.table(Kallisto_lib15, file="/Volumes/RNAseq2016_2/kallisto2021V4/quantification/matrix/Lib_15", row.names=FALSE, col.names=FALSE)
  
  Kallisto_lib16$length <- NULL
  Kallisto_lib16$eff_length <- NULL
  Kallisto_lib16$tpm <- NULL
  Kallisto_lib16$est_counts <- round(Kallisto_lib16$est_counts)
  write.table(Kallisto_lib16, file="/Volumes/RNAseq2016_2/kallisto2021V4/quantification/matrix/Lib_16", row.names=FALSE, col.names=FALSE)
  
  
  Kallisto_lib17$length <- NULL
  Kallisto_lib17$eff_length <- NULL
  Kallisto_lib17$tpm <- NULL
  Kallisto_lib17$est_counts <- round(Kallisto_lib17$est_counts)
  write.table(Kallisto_lib17, file="/Volumes/RNAseq2016_2/kallisto2021V4/quantification/matrix/Lib_17", row.names=FALSE, col.names=FALSE)
  
  Kallisto_lib18$length <- NULL
  Kallisto_lib18$eff_length <- NULL
  Kallisto_lib18$tpm <- NULL
  Kallisto_lib18$est_counts <- round(Kallisto_lib18$est_counts)
  write.table(Kallisto_lib18, file="/Volumes/RNAseq2016_2/kallisto2021V4/quantification/matrix/Lib_18", row.names=FALSE, col.names=FALSE)
  
  Kallisto_lib19$length <- NULL
  Kallisto_lib19$eff_length <- NULL
  Kallisto_lib19$tpm <- NULL
  Kallisto_lib19$est_counts <- round(Kallisto_lib19$est_counts)
  write.table(Kallisto_lib19, file="/Volumes/RNAseq2016_2/kallisto2021V4/quantification/matrix/Lib_19", row.names=FALSE, col.names=FALSE)
  
  Kallisto_lib20$length <- NULL
  Kallisto_lib20$eff_length <- NULL
  Kallisto_lib20$tpm <- NULL
  Kallisto_lib20$est_counts <- round(Kallisto_lib20$est_counts)
  write.table(Kallisto_lib20, file="/Volumes/RNAseq2016_2/kallisto2021V4/quantification/matrix/Lib_20", row.names=FALSE, col.names=FALSE)
  
  Kallisto_lib21$length <- NULL
  Kallisto_lib21$eff_length <- NULL
  Kallisto_lib21$tpm <- NULL
  Kallisto_lib21$est_counts <- round(Kallisto_lib21$est_counts)
  write.table(Kallisto_lib21, file="/Volumes/RNAseq2016_2/kallisto2021V4/quantification/matrix/Lib_21", row.names=FALSE, col.names=FALSE)
  
  Kallisto_lib22$length <- NULL
  Kallisto_lib22$eff_length <- NULL
  Kallisto_lib22$tpm <- NULL
  Kallisto_lib22$est_counts <- round(Kallisto_lib22$est_counts)
  write.table(Kallisto_lib22, file="/Volumes/RNAseq2016_2/kallisto2021V4/quantification/matrix/Lib_22", row.names=FALSE, col.names=FALSE)
  
  Kallisto_lib23$length <- NULL
  Kallisto_lib23$eff_length <- NULL
  Kallisto_lib23$tpm <- NULL
  Kallisto_lib23$est_counts <- round(Kallisto_lib23$est_counts)
  write.table(Kallisto_lib23, file="/Volumes/RNAseq2016_2/kallisto2021V4/quantification/matrix/Lib_23", row.names=FALSE, col.names=FALSE)
  
  Kallisto_lib24$length <- NULL
  Kallisto_lib24$eff_length <- NULL
  Kallisto_lib24$tpm <- NULL
  Kallisto_lib24$est_counts <- round(Kallisto_lib24$est_counts)
  write.table(Kallisto_lib24, file="/Volumes/RNAseq2016_2/kallisto2021V4/quantification/matrix/Lib_24", row.names=FALSE, col.names=FALSE)
  
  Kallisto_lib25$length <- NULL
  Kallisto_lib25$eff_length <- NULL
  Kallisto_lib25$tpm <- NULL
  Kallisto_lib25$est_counts <- round(Kallisto_lib25$est_counts)
  write.table(Kallisto_lib25, file="/Volumes/RNAseq2016_2/kallisto2021V4/quantification/matrix/Lib_25", row.names=FALSE, col.names=FALSE)
  
  
  Kallisto_lib26$length <- NULL
  Kallisto_lib26$eff_length <- NULL
  Kallisto_lib26$tpm <- NULL
  Kallisto_lib26$est_counts <- round(Kallisto_lib26$est_counts)
  write.table(Kallisto_lib26, file="/Volumes/RNAseq2016_2/kallisto2021V4/quantification/matrix/Lib_26", row.names=FALSE, col.names=FALSE)
  
  Kallisto_lib27$length <- NULL
  Kallisto_lib27$eff_length <- NULL
  Kallisto_lib27$tpm <- NULL
  Kallisto_lib27$est_counts <- round(Kallisto_lib27$est_counts)
  write.table(Kallisto_lib27, file="/Volumes/RNAseq2016_2/kallisto2021V4/quantification/matrix/Lib_27", row.names=FALSE, col.names=FALSE)
  
  Kallisto_lib28$length <- NULL
  Kallisto_lib28$eff_length <- NULL
  Kallisto_lib28$tpm <- NULL
  Kallisto_lib28$est_counts <- round(Kallisto_lib28$est_counts)
  write.table(Kallisto_lib28, file="/Volumes/RNAseq2016_2/kallisto2021V4/quantification/matrix/Lib_28", row.names=FALSE, col.names=FALSE)
  
  Kallisto_lib29$length <- NULL
  Kallisto_lib29$eff_length <- NULL
  Kallisto_lib29$tpm <- NULL
  Kallisto_lib29$est_counts <- round(Kallisto_lib29$est_counts)
  write.table(Kallisto_lib29, file="/Volumes/RNAseq2016_2/kallisto2021V4/quantification/matrix/Lib_29", row.names=FALSE, col.names=FALSE)
  
  Kallisto_lib30$length <- NULL
  Kallisto_lib30$eff_length <- NULL
  Kallisto_lib30$tpm <- NULL
  Kallisto_lib30$est_counts <- round(Kallisto_lib30$est_counts)
  write.table(Kallisto_lib30, file="/Volumes/RNAseq2016_2/kallisto2021V4/quantification/matrix/Lib_30", row.names=FALSE, col.names=FALSE)
  
  Kallisto_lib31$length <- NULL
  Kallisto_lib31$eff_length <- NULL
  Kallisto_lib31$tpm <- NULL
  Kallisto_lib31$est_counts <- round(Kallisto_lib31$est_counts)
  write.table(Kallisto_lib31, file="/Volumes/RNAseq2016_2/kallisto2021V4/quantification/matrix/Lib_31", row.names=FALSE, col.names=FALSE)
  
  Kallisto_lib32$length <- NULL
  Kallisto_lib32$eff_length <- NULL
  Kallisto_lib32$tpm <- NULL
  Kallisto_lib32$est_counts <- round(Kallisto_lib32$est_counts)
  write.table(Kallisto_lib32, file="/Volumes/RNAseq2016_2/kallisto2021V4/quantification/matrix/Lib_32", row.names=FALSE, col.names=FALSE)
  
  Kallisto_lib33$length <- NULL
  Kallisto_lib33$eff_length <- NULL
  Kallisto_lib33$tpm <- NULL
  Kallisto_lib33$est_counts <- round(Kallisto_lib33$est_counts)
  write.table(Kallisto_lib33, file="/Volumes/RNAseq2016_2/kallisto2021V4/quantification/matrix/Lib_33", row.names=FALSE, col.names=FALSE)
  
  Kallisto_lib34$length <- NULL
  Kallisto_lib34$eff_length <- NULL
  Kallisto_lib34$tpm <- NULL
  Kallisto_lib34$est_counts <- round(Kallisto_lib34$est_counts)
  write.table(Kallisto_lib34, file="/Volumes/RNAseq2016_2/kallisto2021V4/quantification/matrix/Lib_34", row.names=FALSE, col.names=FALSE)
  
  Kallisto_lib35$length <- NULL
  Kallisto_lib35$eff_length <- NULL
  Kallisto_lib35$tpm <- NULL
  Kallisto_lib35$est_counts <- round(Kallisto_lib35$est_counts)
  write.table(Kallisto_lib35, file="/Volumes/RNAseq2016_2/kallisto2021V4/quantification/matrix/Lib_35", row.names=FALSE, col.names=FALSE)
  
  Kallisto_lib36$length <- NULL
  Kallisto_lib36$eff_length <- NULL
  Kallisto_lib36$tpm <- NULL
  Kallisto_lib36$est_counts <- round(Kallisto_lib36$est_counts)
  write.table(Kallisto_lib36, file="/Volumes/RNAseq2016_2/kallisto2021V4/quantification/matrix/Lib_36", row.names=FALSE, col.names=FALSE)
  
  Kallisto_lib37$length <- NULL
  Kallisto_lib37$eff_length <- NULL
  Kallisto_lib37$tpm <- NULL
  Kallisto_lib37$est_counts <- round(Kallisto_lib37$est_counts)
  write.table(Kallisto_lib37, file="/Volumes/RNAseq2016_2/kallisto2021V4/quantification/matrix/Lib_37", row.names=FALSE, col.names=FALSE)
  
  Kallisto_lib38$length <- NULL
  Kallisto_lib38$eff_length <- NULL
  Kallisto_lib38$tpm <- NULL
  Kallisto_lib38$est_counts <- round(Kallisto_lib38$est_counts)
  write.table(Kallisto_lib38, file="/Volumes/RNAseq2016_2/kallisto2021V4/quantification/matrix/Lib_38", row.names=FALSE, col.names=FALSE)
  
  Kallisto_lib39$length <- NULL
  Kallisto_lib39$eff_length <- NULL
  Kallisto_lib39$tpm <- NULL
  Kallisto_lib39$est_counts <- round(Kallisto_lib39$est_counts)
  write.table(Kallisto_lib39, file="/Volumes/RNAseq2016_2/kallisto2021V4/quantification/matrix/Lib_39", row.names=FALSE, col.names=FALSE)
  
  Kallisto_lib40$length <- NULL
  Kallisto_lib40$eff_length <- NULL
  Kallisto_lib40$tpm <- NULL
  Kallisto_lib40$est_counts <- round(Kallisto_lib40$est_counts)
  write.table(Kallisto_lib40, file="/Volumes/RNAseq2016_2/kallisto2021V4/quantification/matrix/Lib_40", row.names=FALSE, col.names=FALSE)
  
  Kallisto_lib41$length <- NULL
  Kallisto_lib41$eff_length <- NULL
  Kallisto_lib41$tpm <- NULL
  Kallisto_lib41$est_counts <- round(Kallisto_lib41$est_counts)
  write.table(Kallisto_lib41, file="/Volumes/RNAseq2016_2/kallisto2021V4/quantification/matrix/Lib_41", row.names=FALSE, col.names=FALSE)
  
  Kallisto_lib42$length <- NULL
  Kallisto_lib42$eff_length <- NULL
  Kallisto_lib42$tpm <- NULL
  Kallisto_lib42$est_counts <- round(Kallisto_lib42$est_counts)
  write.table(Kallisto_lib42, file="/Volumes/RNAseq2016_2/kallisto2021V4/quantification/matrix/Lib_42", row.names=FALSE, col.names=FALSE)
  
  Kallisto_lib43$length <- NULL
  Kallisto_lib43$eff_length <- NULL
  Kallisto_lib43$tpm <- NULL
  Kallisto_lib43$est_counts <- round(Kallisto_lib43$est_counts)
  write.table(Kallisto_lib43, file="/Volumes/RNAseq2016_2/kallisto2021V4/quantification/matrix/Lib_43", row.names=FALSE, col.names=FALSE)
  
  Kallisto_lib44$length <- NULL
  Kallisto_lib44$eff_length <- NULL
  Kallisto_lib44$tpm <- NULL
  Kallisto_lib44$est_counts <- round(Kallisto_lib44$est_counts)
  write.table(Kallisto_lib44, file="/Volumes/RNAseq2016_2/kallisto2021V4/quantification/matrix/Lib_44", row.names=FALSE, col.names=FALSE)
  
  Kallisto_lib45$length <- NULL
  Kallisto_lib45$eff_length <- NULL
  Kallisto_lib45$tpm <- NULL
  Kallisto_lib45$est_counts <- round(Kallisto_lib45$est_counts)
  write.table(Kallisto_lib45, file="/Volumes/RNAseq2016_2/kallisto2021V4/quantification/matrix/Lib_45", row.names=FALSE, col.names=FALSE)
  
  Kallisto_lib46$length <- NULL
  Kallisto_lib46$eff_length <- NULL
  Kallisto_lib46$tpm <- NULL
  Kallisto_lib46$est_counts <- round(Kallisto_lib46$est_counts)
  write.table(Kallisto_lib46, file="/Volumes/RNAseq2016_2/kallisto2021V4/quantification/matrix/Lib_46", row.names=FALSE, col.names=FALSE)
  
  Kallisto_lib47$length <- NULL
  Kallisto_lib47$eff_length <- NULL
  Kallisto_lib47$tpm <- NULL
  Kallisto_lib47$est_counts <- round(Kallisto_lib47$est_counts)
  write.table(Kallisto_lib47, file="/Volumes/RNAseq2016_2/kallisto2021V4/quantification/matrix/Lib_47", row.names=FALSE, col.names=FALSE)
  
  Kallisto_lib48$length <- NULL
  Kallisto_lib48$eff_length <- NULL
  Kallisto_lib48$tpm <- NULL
  Kallisto_lib48$est_counts <- round(Kallisto_lib48$est_counts)
  write.table(Kallisto_lib48, file="/Volumes/RNAseq2016_2/kallisto2021V4/quantification/matrix/Lib_48", row.names=FALSE, col.names=FALSE)
  
  
  directory<- "/Volumes/RNAseq2016_2/kallisto2021V4/quantification/matrix"
  sampleFiles <- grep("Lib",list.files(directory),value=TRUE)
  sampleFiles
}
########
##create the count.matrix####

# Loading RAW count data
{
  setwd("/Volumes/RNAseq2016_2/kallisto2021V4/quantification/matrix")
  getwd()
  example <- read.table("Lib_1", header=F); example #the h=T, the first count is missing
  
  libraries <- list.files()
  libraries
  
  Kal.count.data <- matrix(nrow=nrow(example),ncol=length(libraries))
  for(i in 1:length(libraries)){
    library.n <- read.table(libraries[i], header=F); library.n  #the h=T, the first count is missing
    Kal.count.data[,i] <- library.n[,2]
    if(i == length(libraries)) row.names(Kal.count.data) <- row.names(library.n[1])
  }
  colnames(Kal.count.data) <-libraries
  row.names(Kal.count.data) <- example[,1]
  Kal.count.data <- as.data.frame(Kal.count.data)
  str(Kal.count.data)
  head(Kal.count.data)
  dim(Kal.count.data)
  #[1] 46888    48
}
{setwd("/Users/aroulinn/Documents/sequencing_results/RNAseq/RNAseq2016/Analyses_DE/Kallisto/NewKallisto2021/Kallisto_V4_2021")

save(Kal.count.data, file="Kal.count.data.RData")
load("Kal.count.data.RData")

Kal.count.data
#highest cout
lcl|NW_024881271.1_rrna_XR_006166403.1_3327 #28sRNA
#remove: 28S rRNA
Kal.count.data.worRNA<-Kal.count.data[Kal.count.data$Lib_1 != 2095570, ]   ;  Kal.count.data.worRNA 

setwd("/Users/aroulinn/Documents/sequencing_results/RNAseq/RNAseq2016/Analyses_DE/Kallisto/NewKallisto2021/Kallisto_V4_2021")
getwd()
save(Kal.count.data.worRNA, file="Kal.count.data.worRNA.RData")
load("Kal.count.data.worRNA.RData")

#a<- Kal.count.data["MC1R", ]; a
}
#prepare gene level, not transcript level#####
{ #1) add the gene name to the counts  
  setwd("/Users/aroulinn/Documents/sequencing_results/RNAseq/RNAseq2016/Analyses_DE/Kallisto/NewKallisto2021/Kallisto_V4_2021")
  getwd()
  load("Kal.count.data.worRNA.RData")
  
  Kal.data<-Kal.count.data.worRNA
  
  Kal.data$TranscriptID<-rownames(Kal.data)
  names(Kal.data)
  
  correspondance_transcript_genesV4_out <- read.delim("~/Documents/sequencing_results/RNAseq/RNAseq2016/Analyses_DE/Kallisto/NewKallisto2021/Kallisto_V4_2021/correspondance_transcript_genesV4_out.txt")
 
  Kal<-merge(Kal.data,correspondance_transcript_genesV4_out, by="TranscriptID")
  names(Kal) #44009 52
  
              Kala<-merge(Kal.data,correspondance_transcript_genesV4_out, by="TranscriptID", all=T)
             names(Kala) #46887 52
  
               #check the differnce between both data frame, there are extra columns lost witht he naming of genes
              # newdata <- setdiff(Kal, Kala)
 install.packages("dplyr")
 library(dplyr)
             require(dplyr)
  
               missing_data <-anti_join(Kala, Kal, by="gene") #2878 rows with only 0 for the counts, thus OK to remove
  
               #I can use Kal
               
   #2) try to use rowsum use Kal
               #a) order by geneid
               a<-Kal
               dim(a)
               names(a)
               #[1] "TranscriptID" "Lib_1"        "Lib_10"       "Lib_11"       "Lib_12"       "Lib_13"       "Lib_14"       "Lib_15"       "Lib_16"      
               #[10] "Lib_17"       "Lib_18"       "Lib_19"       "Lib_2"        "Lib_20"       "Lib_21"       "Lib_22"       "Lib_23"       "Lib_24"      
               #[19] "Lib_25"       "Lib_26"       "Lib_27"       "Lib_28"       "Lib_29"       "Lib_3"        "Lib_30"       "Lib_31"       "Lib_32"      
               #[28] "Lib_33"       "Lib_34"       "Lib_35"       "Lib_36"       "Lib_37"       "Lib_38"       "Lib_39"       "Lib_4"        "Lib_40"      
               #[37] "Lib_41"       "Lib_42"       "Lib_43"       "Lib_44"       "Lib_45"       "Lib_46"       "Lib_47"       "Lib_48"       "Lib_5"       
               #[46] "Lib_6"        "Lib_7"        "Lib_8"        "Lib_9"        "gene"         "db_ref"       "product"      "TXNAME"   
             
                a<-a[order(a$gene, na.last = TRUE), ]; a
               
              
                library(dplyr)
               b<- select(a, gene, Lib_1,Lib_10,Lib_11,Lib_12,Lib_13,Lib_14,Lib_15,Lib_16,Lib_17,Lib_18, Lib_19, Lib_2, Lib_20, Lib_21, Lib_22, Lib_23, Lib_24, Lib_25, Lib_26, Lib_27, Lib_28, Lib_29, Lib_3, Lib_30, Lib_31, Lib_32, Lib_33, Lib_34, Lib_35, Lib_36, Lib_37, Lib_38, Lib_39, Lib_4, Lib_40, Lib_41, Lib_42, Lib_43, Lib_44, Lib_45, Lib_46, Lib_47, Lib_48, Lib_5, Lib_6, Lib_7, Lib_8, Lib_9 )
               b
               #       gene Lib_1 Lib_10 Lib_11 Lib_12 Lib_13 Lib_14 Lib_15 Lib_16 Lib_17 Lib_18 Lib_19 Lib_2 Lib_20 Lib_21 Lib_22 Lib_23 Lib_24 Lib_25 Lib_26 Lib_27
              # 966     A1CF     0      0      0      0      0      8      0      0     11      0      0     0      0      0      0      0      1      0      0      0
              # 967     A1CF     1      1      0      0      2      0      7      1      0      2      2     8      0     10      5      5      0      7      3      5
               #18338 A4GALT   212    136    158    114    129    124    205    166    164    221    120   113     90    279     87    129    198    140    148    115
              # 1583   A4GNT     2      8      2      0      1      0      0      3      2      1      6     0      2      0      3      3      2      0      0      0
               
               require(dplyr)
              
             c<-    b %>% 
                group_by(gene) %>% 
                summarise_all(funs(sum))
             
              
                 # A tibble: 18,252 × 49
               #  gene   Lib_1 Lib_10 Lib_11 Lib_12 Lib_13 Lib_14 Lib_15 Lib_16 Lib_17 Lib_18 Lib_19 Lib_2 Lib_20 Lib_21 Lib_22 Lib_23 Lib_24 Lib_25 Lib_26 Lib_27
               #  <chr>  <int>  <int>  <int>  <int>  <int>  <int>  <int>  <int>  <int>  <int>  <int> <int>  <int>  <int>  <int>  <int>  <int>  <int>  <int>  <int>
               #    1 A1CF       1      1      0      0      2      8      7      1     11      2      2     8      0     10      5      5      1      7      3      5
               #  2 A4GALT   212    136    158    114    129    124    205    166    164    221    120   113     90    279     87    129    198    140    148    115
               #  3 A4GNT      2      8      2      0      1      0      0      3      2      1      6     0      2      0      3      3      2      0      0      0
     

        #3) rownames = gene     
             d<-as.data.frame(c)
             rownames(d)<-d$gene; d
        #4) renove the column gene
             
             library(dplyr)
             e<- select(d,  Lib_1,Lib_10,Lib_11,Lib_12,Lib_13,Lib_14,Lib_15,Lib_16,Lib_17,Lib_18, Lib_19, Lib_2, Lib_20, Lib_21, Lib_22, Lib_23, Lib_24, Lib_25, Lib_26, Lib_27, Lib_28, Lib_29, Lib_3, Lib_30, Lib_31, Lib_32, Lib_33, Lib_34, Lib_35, Lib_36, Lib_37, Lib_38, Lib_39, Lib_4, Lib_40, Lib_41, Lib_42, Lib_43, Lib_44, Lib_45, Lib_46, Lib_47, Lib_48, Lib_5, Lib_6, Lib_7, Lib_8, Lib_9 )
             
             Kal.gene.data<-e
             
             setwd("/Users/aroulinn/Documents/sequencing_results/RNAseq/RNAseq2016/Analyses_DE/Kallisto/NewKallisto2021/Kallisto_V4_2021/Analyses2022")
             
             save(Kal.gene.data, file="Kal.gene.data.RData")
             load("Kal.gene.data.RData")
             
}       
{ setwd("/Users/aroulinn/Documents/sequencing_results/RNAseq/RNAseq2016/Analyses_DE/Kallisto/NewKallisto2021/Kallisto_V4_2021/Analyses2022")
             
load("Kal.gene.data.RData")
             
                   
#try with Tximport but it does not work, it does not work
{  BiocManager::install("tximportData")
  library(tximportData)

  library(rhdf5)

  setwd("/Users/aroulinn/Documents/sequencing_results/RNAseq/RNAseq2016/Analyses_DE/Kallisto/NewKallisto2021/Kallisto_V4_2021/Analyses2022/")
  tx2gene <- read.delim("~/Documents/sequencing_results/RNAseq/RNAseq2016/Analyses_DE/Kallisto/NewKallisto2021/Kallisto_V4_2021/Analyses2022/tx2gene.txt")
  View(tx2gene)  

  quant_files <- list.files("/Volumes/RNAseq2016_2/Kallisto2021V4/quantification/",pattern="abundance.tsv",recursive = TRUE,full.names = TRUE)
  quant_files  
  #[1] "/Volumes/RNAseq2016_2/Kallisto2021V4/quantification//Lib1/abundance.tsv" 
  #[2] "/Volumes/RNAseq2016_2/Kallisto2021V4/quantification//Lib10/abundance.tsv"
  names(quant_files) <- dirs
  quant_files
 # Lib1 
 # "/Volumes/RNAseq2016_2/Kallisto2021V4/quantification//Lib1/abundance.tsv" 
 # Lib10 
 # "/Volumes/RNAseq2016_2/Kallisto2021V4/quantification//Lib10/abundance.tsv" 
  library(tximportData) 
  library(tximport)
  txi.kallisto.tsv <- tximport(quant_files, type = "kallisto", tx2gene = tx2gene)
 # 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 Error in H5Fopen(file, flags = flags, fapl = fapl, native = native) : 
  #  HDF5. File accessibilty. Unable to open file.
  
  
#files <- file.path(dir, "kallisto", samples$run, "abundance.tsv.gz")
#names(files) <- paste0("dirs", 1:48)
txi.kallisto.tsv <- tximport(quant_files, type = "kallisto", tx2gene = tx2gene)
#1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 Error in H5Fopen(file, flags = flags, fapl = fapl, native = native) : 
#HDF5. File accessibilty. Unable to open file

txi.kallisto <- tximport(quant_files, type = "kallisto", txOut=TRUE)
#1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 Error in H5Fopen(file, flags = flags, fapl = fapl, native = native) : 
#  HDF5. File accessibilty. Unable to open file.
#impossible to find a solution probably a problem of Kallisto form the reading ans I do not want to redo all
head(txi.kallisto.tsv$counts)
}

#prepare the geneID ref table not necessary
{  
setwd("/Users/aroulinn/Documents/sequencing_results/RNAseq/RNAseq2016/Analyses_DE/Kallisto/NewKallisto2021/Kallisto_V4_2021/Analyses2022/")
tx2gene <- read.delim("~/Documents/sequencing_results/RNAseq/RNAseq2016/Analyses_DE/Kallisto/NewKallisto2021/Kallisto_V4_2021/Analyses2022/tx2gene.txt")
View(tx2gene)
names(tx2gene)
#[1] "TXNAME" "GENEID" 
}

### Loading individuals information file####
{
  setwd("~/Documents/sequencing_results/RNAseq/RNAseq2016/Analyses_DE/Deseq2/DEAnalysis_LUIS/TytoV4")
  individual.info <- read.delim("allind20210906simp.txt",header=T)
  
  dim(individual.info)
  #48 66
  
  setwd("/Users/aroulinn/Documents/sequencing_results/RNAseq/RNAseq2016/Analyses_DE/Kallisto/NewKallisto2021/Kallisto_V4_2021/Analyses2022")
  
  #save(individual.info, file="individual.info.RData")
  load("individual.info.RData")
  
  
} 
}
#connect the ind and count data files ################################
{ 
  ####connect to individual files
  setwd("/Users/aroulinn/Documents/sequencing_results/RNAseq/RNAseq2016/Analyses_DE/Kallisto/NewKallisto2021/Kallisto_V4_2021/Analyses2022")
  load("individual.info.RData")
  
  setwd("/Users/aroulinn/Documents/sequencing_results/RNAseq/RNAseq2016/Analyses_DE/Kallisto/NewKallisto2021/Kallisto_V4_2021/Analyses2022")
  load("Kal.gene.data.RData")
}  

##male info with problematic libraries for figure####
{
  individual.info<-individual.info[order(individual.info$Libraries),]
  male.info<-individual.info[-c(7,9,15,18,20,30,33,38,41,45,48)  ,]
  
  #check the order of the individual file and the count data and make the correspondance
  # Ordering individuals according to count.data order 
  Kal.gene.data.allmales <- Kal.gene.data[,order(as.numeric(sub("Lib_","",colnames(Kal.gene.data))))]; Kal.gene.data.allmales
  allmales.gene.V4.Kal  <- Kal.gene.data.allmales[,-c(7,9,15,18,20,30,33,38,41,45,48)]  
  
  male.info<-male.info[order(as.numeric(sub("Lib_","",colnames(allmales.gene.V4.Kal)))),]; male.info
  as.numeric(sub("Lib_","",colnames(allmales.gene.V4.Kal))) == male.info$Libraries # Now they have the same order
  #[1] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
  #[30] TRUE TRUE TRUE TRUE
  
  # add a column color
  
  male.info$color <- sub("-","",sub("[^-]*","",male.info$ExperimentalGroups)); male.info$color
  # [1] "red"   "red"   "white" "white" "white" "red"   "red"   "red"   "white" "white" "white" "red"   "red"   "white" "red"   "white" "white" "red"  
  #[19] "white" "red"   "white" "red"   "white" "white" "red"   "white" "red"   "white" "white" "red"   "white" "white" "red" 
  
  setwd("/Users/aroulinn/Documents/sequencing_results/RNAseq/RNAseq2016/Analyses_DE/Kallisto/NewKallisto2021/Kallisto_V4_2021/Analyses2022")
  save(male.info, file="male.info.RData")
  save(allmales.gene.V4.Kal, file="allmales.gene.V4.Kal.RData")
} #prepare the files
  setwd("/Users/aroulinn/Documents/sequencing_results/RNAseq/RNAseq2016/Analyses_DE/Kallisto/NewKallisto2021/Kallisto_V4_2021/Analyses2022")
  
  load("male.info.RData")
  load("allmales.gene.V4.Kal.RData")
  
###filter the counts####
  #
  { 
    
    setwd("/Users/aroulinn/Documents/sequencing_results/RNAseq/RNAseq2016/Analyses_DE/Kallisto/NewKallisto2021/Kallisto_V4_2021/Analyses2022")
    load("male.info.RData")
    load("allmales.gene.V4.Kal.RData")
    
    counts <- as.matrix(round(allmales.gene.V4.Kal))
    
    nrow(counts) # 18252
    
    unexpressed <- apply(counts, MARGIN = 1, function(x) length(x[x==0]))
    table(unexpressed)/nrow(counts)*100
    #unexpressed
    #0          1          2          3          4          5          6          7          8 
    #80.4733728  2.8599606  1.3916283  0.9807144  0.7451238  0.7670392  0.5369275  0.4930966  0.4547447 
    #9         10         11         12         13         14         15         16         17 
    #0.4273504  0.3561254  0.3999562  0.3780408  0.3835196  0.4711812  0.3835196  0.4602235  0.3889985 
    #18         19         20         21         22         23         24         25         26 
    #0.3068157  0.2465483  0.3670831  0.3287311  0.3342099  0.2794214  0.2794214  0.2794214  0.2684637 
    #27         28         29         30         31         32         33         34         35 
    #0.3451677  0.3725619  0.3287311  0.2849003  0.4273504  0.4985755  0.3725619  0.5424063  0.6738988 
    #36         37 
    #0.7012930  0.4109139 
    
    length(unexpressed[unexpressed == 37])/nrow(counts)*100 # 0.4109139 % of the features with zero expression in all individuals
    
    total.counts <- apply(counts, MARGIN = 1, sum);total.counts
    #  A1CF    A4GALT     A4GNT      AAAS      AACS     AADAC     AADAT     AAGAB      AAK1     AAMDC 
    #154      5829        61     46352     80734       776     54529     69122     54989     48749 
    #AANAT      AAR2     AARS1     AARS2     AASDH  AASDHPPT      AASS      AATF      AATK      ABAT 
    #248     61576    157356     41350     41130     28292     18404     30194      9364     26757 
    
    
    
    
    table(unexpressed[total.counts >= 30 & unexpressed <= 15])
    #   0     1     2     3     4     5     6     7     8     9    10    11    12    13    14    15 
   # 14688   522   254   179   136   140    98    90    83    78    65    73    69    70    86    70    71    95    55   # We keep genes with at least 30 counts over all individuals and with non-zero expression
    # in at least half the libraries
    to.keep <- which(total.counts >= 30 & unexpressed <= 15)
    length(to.keep)/nrow(counts)*100 # Keeping the 91.5023 % of the genes
    nrow(counts[to.keep,]) #[1] 16701 features kept
    allmales.gene.V4.Kal.filtered <- counts[to.keep,]
    
  }
    setwd("/Users/aroulinn/Documents/sequencing_results/RNAseq/RNAseq2016/Analyses_DE/Kallisto/NewKallisto2021/Kallisto_V4_2021/Analyses2022")
    save(allmales.gene.V4.Kal.filtered, file="allmales.gene.V4.Kal.filtered.RData")
    load("allmales.gene.V4.Kal.filtered.RData") 
    
#####do a figure to show that the Lib 4, 8, 14, 29 should be removed#########
    { 
      library(DESeq2)
      
      setwd("/Users/aroulinn/Documents/sequencing_results/RNAseq/RNAseq2016/Analyses_DE/Kallisto/NewKallisto2021/Kallisto_V4_2021/Analyses2022")
      load("allmales.gene.V4.Kal.filtered.RData") 
      
      #visualising the count of each samples
      male.info$V126I <- as.factor(male.info$V126I) 
      male.info$color <- as.factor(male.info$color)
      male.info$cPoiYA <- as.factor(male.info$cPoiYA)
      
      dds <- DESeqDataSetFromMatrix(countData = as.matrix(allmales.gene.V4.Kal.filtered), colData = male.info, design = ~ V126I + color) #+ color
      colData(dds) 
      # DataFrame with 33 rows and 66 columns
      
      #get log2 counts that will normalized the variation in the counts see below
      vsd <- vst(dds,blind=TRUE)
      
      # Check distributions of samples using boxplots
      boxplot(assay(vsd), xlab="", ylab="Log2 counts per million",las=2,main="Normalised Distributions")
      # Let's add a blue horizontal line that corresponds to the median logCPM
      abline(h=median(assay(vsd)), col="blue")
    
    #Heatmap of the sample-to-sample distances
    sampleDists <- dist(t(assay(vsd)))
    
    library(RColorBrewer)
    library(pheatmap)
    sampleDistMatrix <- as.matrix(sampleDists)
    rownames(sampleDistMatrix) <- paste(colData(dds)$Libraries, colData(dds)$V126I, sep="-")
    colnames(sampleDistMatrix) <- colData(dds)$Name
    colors <- colorRampPalette( rev(brewer.pal(9, "Blues")) )(255)
    pheatmap(sampleDistMatrix,col=colors)
    #not visible that L4,8,14, and 29 should be removed, seems L26 also
    
    #PCA to see if better 
    rld <- rlog(dds, blind = FALSE)
    head(assay(rld), 3)
    
    library(ggplot2)
    data <- plotPCA(rld, intgroup=c("Libraries"), returnData=TRUE)
    percentVar <- round(100 * attr(data, "percentVar"))
    ggplot(data, aes(PC1, PC2, color=Libraries, label=Libraries)) +
      geom_point(size=3) + geom_label() +
      xlab(paste0("PC1: ",percentVar[1],"% variance")) +
      ylab(paste0("PC2: ",percentVar[2],"% variance")) +
      coord_fixed()
    
    library(ggplot2)
    data <- plotPCA(rld, intgroup=c("Libraries"), returnData=TRUE)
    percentVar <- round(100 * attr(data, "percentVar"))
   p <- ggplot(data, aes(PC1, PC2, color=Libraries, label=Libraries)) +
      geom_point(size=3)  +
      xlab(paste0("PC1: ",percentVar[1],"% variance")) +
      ylab(paste0("PC2: ",percentVar[2],"% variance")) +
      coord_fixed()
    
   library(ggrepel)
    require("ggrepel")
    set.seed(37)
    p + geom_text_repel(aes(label = Libraries), size = 4)
    
  } 



}
##male info woL4_8_14_29#####
{ individual.info<-individual.info[order(individual.info$Libraries),]
  male.info_woL4_8_14_29<-individual.info[-c(4,7,8,9,14,15,18,20,29,30,33,38,41,45,48)  ,]
  
    #check the order of the individual file and the count data and make the correspondance
    # Ordering individuals according to count.data order 
    Kal.gene.data <- Kal.gene.data[,order(as.numeric(sub("Lib_","",colnames(Kal.gene.data))))]; Kal.gene.data
    male.gene.V4.Kal.woL4_8_14_29  <- Kal.gene.data[,-c(4,7,8,9,14,15,18,20,29,30,33,38,41,45,48)]  

    male.info_woL4_8_14_29<-male.info_woL4_8_14_29[order(as.numeric(sub("Lib_","",colnames(male.gene.V4.Kal.woL4_8_14_29)))),]; male.info_woL4_8_14_29
    as.numeric(sub("Lib_","",colnames(male.gene.V4.Kal.woL4_8_14_29))) == male.info_woL4_8_14_29$Libraries # Now they have the same order
    #[1] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
    #[30] TRUE TRUE TRUE TRUE

    # add a column color

    male.info_woL4_8_14_29$color <- sub("-","",sub("[^-]*","",male.info_woL4_8_14_29$ExperimentalGroups)); male.info_woL4_8_14_29$color
    # [1] "red"   "red"   "white" "white" "white" "red"   "red"   "red"   "white" "white" "white" "red"   "red"   "white" "red"   "white" "white" "red"  
    #[19] "white" "red"   "white" "red"   "white" "white" "red"   "white" "red"   "white" "white" "red"   "white" "white" "red" 

    setwd("/Users/aroulinn/Documents/sequencing_results/RNAseq/RNAseq2016/Analyses_DE/Kallisto/NewKallisto2021/Kallisto_V4_2021/Analyses2022")
    save(male.info_woL4_8_14_29, file="male.info_woL4_8_14_29.RData")
    save(male.gene.V4.Kal.woL4_8_14_29, file="male.gene.V4.Kal.woL4_8_14_29.RData")
}  
    
    setwd("/Users/aroulinn/Documents/sequencing_results/RNAseq/RNAseq2016/Analyses_DE/Kallisto/NewKallisto2021/Kallisto_V4_2021/Analyses2022")
    
    load("male.gene.V4.Kal.woL4_8_14_29.RData")
    load("male.info_woL4_8_14_29.RData")
}   

#filter the counts to remove the 0
{ 

setwd("/Users/aroulinn/Documents/sequencing_results/RNAseq/RNAseq2016/Analyses_DE/Kallisto/NewKallisto2021/Kallisto_V4_2021/Analyses2022")
load("male.gene.V4.Kal.woL4_8_14_29.RData")
load("male.info_woL4_8_14_29.RData")
 
  counts <- as.matrix(round(male.gene.V4.Kal.woL4_8_14_29))
  
  nrow(counts) # 18252
  
  unexpressed <- apply(counts, MARGIN = 1, function(x) length(x[x==0]))
  table(unexpressed)/nrow(counts)*100
  #unexpressed
  #0          1          2          3          4          5          6          7          8          9         10         11         12 
  #82.6101249  1.9559500  1.1286434  0.8218277  0.8327854  0.6574622  0.5752794  0.4109139  0.4109139  0.4163927  0.4766601  0.4383081  0.3999562 
  #13         14         15         16         17         18         19         20         21         22         23         24         25 
  #0.4054350  0.5424063  0.4492658  0.3670831  0.3287311  0.2958580  0.3396888  0.3396888  0.3177734  0.2355906  0.3725619  0.3396888  0.3889985 
  #26         27         28         29         30         31         32         33 
  #0.3342099  0.3944773  0.4876178  0.4218716  0.6026737  0.6903353  0.7615604  0.4492658 
  
  length(unexpressed[unexpressed == 33])/nrow(counts)*100 # 0.4492658 % of the features with zero expression in all individuals
 
  total.counts <- apply(counts, MARGIN = 1, sum);total.counts
  # A1CF    A4GALT     A4GNT      AAAS      AACS     AADAC     AADAT     AAGAB      AAK1     AAMDC     AANAT      AAR2     AARS1     AARS2     AASDH 
  # 145      5376        57     43369     72229       735     50777     61707     52462     43433       247     56031    149210     38460     36938 
 # AASDHPPT      AASS      AATF      AATK      ABAT     ABCA1    ABCA12    ABCA13     ABCA2     ABCA3     ABCA4     ABCA5     ABCA7     ABCB1    ABCB11 
  #25695     16192     28761      8936     24655     51955    892564       529     24092    104920      5946     27661      1140     18042       221 
  
  
  
  
  table(unexpressed[total.counts >= 30 & unexpressed <= 15])
  #  0     1     2     3     4     5     6     7     8     9    10    11    12    13    14    15 
 # 15078   357   206   150   152   120   105    75    75    76    87    80    73    71    95    55   # We keep genes with at least 30 counts over all individuals and with non-zero expression
  # in at least half the libraries
  to.keep <- which(total.counts >= 30 & unexpressed <= 15)
  length(to.keep)/nrow(counts)*100 # Keeping the 92.34604 % of the genes
  nrow(counts[to.keep,]) #[1] 16855 features kept
  male.gene.V4.Kal.woL4_8_14_29.filtered <- counts[to.keep,]
  

  setwd("/Users/aroulinn/Documents/sequencing_results/RNAseq/RNAseq2016/Analyses_DE/Kallisto/NewKallisto2021/Kallisto_V4_2021/Analyses2022")
  save(male.gene.V4.Kal.woL4_8_14_29.filtered, file="male.gene.V4.Kal.woL4_8_14_29.filtered.RData")
  load("male.gene.V4.Kal.woL4_8_14_29.filtered.RData") 
} 

#####look at the count data#########
{ 
  library(DESeq2)
  
  setwd("/Users/aroulinn/Documents/sequencing_results/RNAseq/RNAseq2016/Analyses_DE/Kallisto/NewKallisto2021/Kallisto_V4_2021/Analyses2022")
  load("male.gene.V4.Kal.woL4_8_14_29.filtered.RData") 
  
  #visualising the count of each samples
  male.info_woL4_8_14_29$V126I <- as.factor(male.info_woL4_8_14_29$V126I) 
  male.info_woL4_8_14_29$color <- as.factor(male.info_woL4_8_14_29$color)
  male.info_woL4_8_14_29$cPoiYA <- as.factor(male.info_woL4_8_14_29$cPoiYA)
  
 dds <- DESeqDataSetFromMatrix(countData = as.matrix(male.gene.V4.Kal.woL4_8_14_29.filtered), colData = male.info_woL4_8_14_29, design = ~ V126I + color)
 colData(dds) 
# DataFrame with 33 rows and 66 columns
# ExperimentalGroups  RingNumber Libraries  BatchLib   SeqLane LibrarySize LibraryUniq  RNABatch ExtractionDay
# <character> <character> <integer> <integer> <integer> <character>   <integer> <integer>     <integer>
#   Lib_1              VI-red     M032107         1         0         1  64'286'713    39149271         8             3
# Lib_2              VV-red     M032114         2         0         1  51'578'326    29823724         9             3
# Lib_3            VV-white     M032115         3         0         1  66'220'096    37798006         9             3
# Lib_5            VI-white     M032147         5         1         4  70'622'644    40591233        13             5
# Lib_6            VV-white     M032142         6         1         4  69'863'823    39980683         6             3
 
  #library size sum lib1
 sum(assay(dds)[,1]) #48'442'546
 colSums(assay(dds))
 #  1        2        3        5        6       10       11       12       13       16       17       19       21       22       23       24 
 #48442546 37700205 47922879 54549126 52423507 61360998 61242079 39180555 55660855 48677684 56347707 50517758 69141153 49207478 60835460 59255823 
 #25       26       27       28       31       32       34       35       36       37       39       40       42       43       44       46 
 #50381510 53942625 60392239 50138582 62943707 60424854 56774683 47626297 64778569 64383018 54067462 62248364 61953162 62286114 65528829 56468070 
 #47 
 #61206188
#####plot the counts
{ par(mfrow=c(1,1))
 
      hist(colSums(assay(dds)))
      barplot(colSums(assay(dds)), xlab="Library", ylab="library size") 
      
  #visualizing count distribution
      boxplot(assay(dds))
      boxplot(log10(assay(dds)))
      
  #get log2 counts that will normalized the variation in the counts see below
      vsd <- vst(dds,blind=TRUE)

  # Check distributions of samples using boxplots
      boxplot(assay(vsd), xlab="", ylab="Log2 counts per million",las=2,main="Normalised Distributions")
      # Let's add a blue horizontal line that corresponds to the median logCPM
      abline(h=median(assay(vsd)), col="blue")
}
  #Heatmap of the sample-to-sample distances
      sampleDists <- dist(t(assay(vsd)))

      library(RColorBrewer)
      library(pheatmap)
      sampleDistMatrix <- as.matrix(sampleDists)
      rownames(sampleDistMatrix) <- paste(colData(dds)$Libraries, colData(dds)$V126I, sep="-")
      colnames(sampleDistMatrix) <- colData(dds)$Name
      colors <- colorRampPalette( rev(brewer.pal(9, "Blues")) )(255)
      pheatmap(sampleDistMatrix,col=colors)
      #seems there is soemthing witht he RNABatch and mois

  #doing it wiht poisson does not work
        #install.packages("PoiClaClu_1.0.2.1.tar.gz")#not available
        #library("PoiClaClu")
        #poisd <- PoissonDistance(t(counts(dds)))
      
      #differnce between rlog, log2 and vst
      rld <- rlog(dds, blind = FALSE)
      head(assay(rld), 3)
      
      library("dplyr")
      library("ggplot2")
      
      dds <- estimateSizeFactors(dds)
      
      df <- bind_rows(
        as_data_frame(log2(counts(dds, normalized=TRUE)[, 1:2]+1)) %>%
          mutate(transformation = "log2(x + 1)"),
        as_data_frame(assay(vsd)[, 1:2]) %>% mutate(transformation = "vst"),
        as_data_frame(assay(rld)[, 1:2]) %>% mutate(transformation = "rlog"))
      
      colnames(df)[1:2] <- c("x", "y")  
      
      lvls <- c("log2(x + 1)", "vst", "rlog")
      df$transformation <- factor(df$transformation, levels=lvls)
      
      ggplot(df, aes(x = x, y = y)) + geom_hex(bins = 80) +
        coord_fixed() + facet_grid( . ~ transformation)  
      #the count levels are low between 250 to 0 (in examples above 1000), the vst correct for the huge variaiton of low counts better than the other 2 methods.
  
     #plot dispersion
      dds <- estimateSizeFactors(dds)
      dds <- estimateDispersions(dds)
      dds <- nbinomWaldTest(dds)
      plotDispEsts(dds) #flatter means that all have similar dispersion, usually not the case for small counts
          
####PCA####
{
  plotPCA(vsd,intgroup="V126I")

  #PCA on non normalised counts
     install.packages("glmpca_0.2.0.tar.gz") #not availbalbe
      #Warning in install.packages :
      #library("glmpca")
      #gpca <- glmpca(counts(dds), L=2)
      #gpca.dat <- gpca$factors
      #gpca.dat$dex <- dds$dex
      #gpca.dat$cell <- dds$cell

      #ggplot(gpca.dat, aes(x = dim1, y = dim2, color = dex, shape = cell)) +
      #  geom_point(size =3) + coord_fixed() + ggtitle("glmpca - Generalized PCA")


      #library(ggplot2)
        #plot_data <- plotPCA(vsd,intgroup=c("V126I","RNABatch"),returnData=TRUE)
      #plot_data <- bind_cols(plot_data,male.info_woL4_8_14_29)
      #ggplot(plot_data, aes(x = PC1,y=PC2, col="V126I",pch="RNABatch")) + geom_point(size=5)
      
     vsd <- vst(model.dds, blind=FALSE)
     
     colData(model.dds) 
     
     library(ggplot2)
     data <- plotPCA(rld, intgroup=c("V126I", "color"), returnData=TRUE)
     percentVar <- round(100 * attr(data, "percentVar"))
     ggplot(data, aes(PC1, PC2, color=color, shape=V126I)) +
       geom_point(size=3) +
       xlab(paste0("PC1: ",percentVar[1],"% variance")) +
       ylab(paste0("PC2: ",percentVar[2],"% variance")) +
       coord_fixed()
      
     
     library(ggplot2)
     data <- plotPCA(rld, intgroup=c("RNABatch", "season"), returnData=TRUE)
     percentVar <- round(100 * attr(data, "percentVar"))
     ggplot(data, aes(PC1, PC2, color=RNABatch, shape=season)) +
       geom_point(size=3) +
       xlab(paste0("PC1: ",percentVar[1],"% variance")) +
       ylab(paste0("PC2: ",percentVar[2],"% variance")) +
       coord_fixed()
     #no
     
     
     
     library(ggplot2)
     data <- plotPCA(rld, intgroup=c("Libraries"), returnData=TRUE)
     percentVar <- round(100 * attr(data, "percentVar"))
     p <- ggplot(data, aes(PC1, PC2, color=Libraries, label=Libraries)) +
       geom_point(size=3)  +
       xlab(paste0("PC1: ",percentVar[1],"% variance")) +
       ylab(paste0("PC2: ",percentVar[2],"% variance")) +
       coord_fixed()
     
     library(ggrepel)
     require("ggrepel")
     set.seed(37)
     p + geom_text_repel(aes(label = Libraries), size = 4)
     
}
###MDS plot #####
{     #using vsd
        mds <- as.data.frame(colData(vsd))  %>%
         cbind(cmdscale(sampleDistMatrix))
        ggplot(mds, aes(x = `1`, y = `2`, color = RNABatch, shape = season)) +
        geom_point(size = 3) + coord_fixed() + ggtitle("MDS with VST data")
         #one VI out Lib26?
        
        ggplot(mds, aes(x = `1`, y = `2`, color = V126I, shape = color)) +
          geom_point(size = 3) + coord_fixed() + ggtitle("MDS with VST data")
        #color red en bas horizontal y<=0, white 
      
      #using rlog
        sampleDists.rld <- dist(t(assay(rld)))
        sampleDistMatrix.rld <- as.matrix(sampleDists.rld)
        
        mds1 <- as.data.frame(colData(rld))  %>%
          cbind(cmdscale(sampleDistMatrix.rld))
        ggplot(mds1, aes(x = `1`, y = `2`, color = V126I, shape = color)) +
          geom_point(size = 3) + coord_fixed() + ggtitle("MDS with rlogT data")
        #idem vsd one point out
       # shall I remove Lib26?
}        
 
##try to remove the RNAbatch effect and unwanted with the package SVA####
{
BiocManager::install("sva")

library(sva)

BiocManager::install("bladderbatch")
library(bladderbatch)

 data(bladderdata)
 
 install.packages("pamr_1.56.1.tar.gz")
 
 library(pamr)
 
 library(limma)
 
 dds <- DESeqDataSetFromMatrix(countData = as.matrix(male.gene.V4.Kal.woL4_8_14_29.filtered), colData = male.info_woL4_8_14_29, design = ~ V126I + color)
 dds <- estimateSizeFactors(dds)
 dds <- DESeq(dds)
 
 
 
 
 dat  <- counts(dds, normalized = TRUE)
 idx  <- rowMeans(dat) > 1
 dat  <- dat[idx, ]
 mod  <- model.matrix(~ V126I + color, colData(dds))
 mod0 <- model.matrix(~   1, colData(dds))
 svseq <- svaseq(dat, mod, mod0, n.sv = 3) #how many?
 svseq$sv

 par(mfrow = c(2, 1), mar = c(3,5,3,1))
 for (i in 1:2) {
   stripchart(svseq$sv[, i] ~ dds$RNABatch, vertical = TRUE, main = paste0("SV", i))
   abline(h = 0)
 }
 #meaning?
 
 #analyses Deseq2 add the column in design
 ddssva <- dds
 male.info_woL4_8_14_29$SV1 <- svseq$sv[,1]
 male.info_woL4_8_14_29$SV2 <- svseq$sv[,2]
 design(ddssva) <- ~ SV1 + SV2 + V126I + color
 
 ddsva1 <- DESeqDataSetFromMatrix(countData = as.matrix(male.gene.V4.Kal.woL4_8_14_29.filtered), colData = male.info_woL4_8_14_29, design = ~ SV1 + SV2 + V126I + color)
 ddsva1 <- DESeq(ddsva1)
 

 resultsNames(ddsva1)
 #[1] "Intercept"          "SV1"                "SV2"                "V126I_VV_vs_VI"     "color_white_vs_red"
 
 #MC1R
 
 Results.MC1R.va <-results(ddsva1, name="V126I_VV_vs_VI" ) 
 
 sum(Results.MC1R.va$pvalue <= 0.05, na.rm=T) #816
 sum(Results.MC1R.va$pvalue <= 0.1, na.rm=T) # 1674
 
 sum(Results.MC1R.va$padj <= 0.05, na.rm=T) #21
 sum(Results.MC1R.va$padj <= 0.1, na.rm=T) #28
 
 resMC1R.va<-results(ddsva1, name="V126I_VV_vs_VI", alpha=0.05)
 resMC1R.va<-resMC1R.va[order(resMC1R.va$padj), ]
 
 head(resMC1R.va, n=28)
 #log2 fold change (MLE): V126I VV vs VI 
 Wald test p-value: V126I VV vs VI 
 DataFrame with 10 rows and 6 columns
 baseMean log2FoldChange     lfcSE      stat      pvalue        padj
 <numeric>      <numeric> <numeric> <numeric>   <numeric>   <numeric>
   SLC45A2  456.7508      -3.249065  0.513449  -6.32792 2.48489e-10 4.18828e-06
 TYRP1    335.0002      -6.210221  1.021443  -6.07985 1.20296e-09 1.01379e-05
 TYR      436.5690      -3.224233  0.545398  -5.91170 3.38588e-09 1.90230e-05
 MFSD12   937.7148      -0.652765  0.117213  -5.56904 2.56147e-08 1.07934e-04
 GPER1     13.8400      -3.054141  0.556124  -5.49184 3.97778e-08 1.11742e-04
 GPR143   368.9167      -1.166955  0.211911  -5.50682 3.65368e-08 1.11742e-04
 RAB38    888.2883      -0.977847  0.181195  -5.39664 6.78988e-08 1.63491e-04
 CALB1     39.8009       2.453126  0.464639   5.27963 1.29443e-07 2.72720e-04
 DDC     1376.4680      -1.715761  0.335541  -5.11342 3.16373e-07 5.92496e-04
 PMEL    4817.3497      -1.286130  0.260512  -4.93693 7.93611e-07 1.33763e-03
 SLC6A4    973.690      -1.294811  0.269711  -4.80073 1.58087e-06  0.00242232
 QPCT      826.663      -0.412020  0.090813  -4.53702 5.70554e-06  0.00739746
 RETSAT    446.062      -0.496649  0.109250  -4.54600 5.46762e-06  0.00739746
 TBXA2R    158.793      -0.684849  0.153037  -4.47506 7.63909e-06  0.00919692
 MLANA    1617.000      -1.161138  0.262351  -4.42590 9.60421e-06  0.01079193
 LOC104357634   36.3226      -1.697025  0.385246  -4.40504 1.05762e-05   0.0111229
 LOC116960306  144.7439      -0.793578  0.180677  -4.39225 1.12185e-05   0.0111229
 LOC116960911  126.8977      -0.903630  0.208407  -4.33590 1.45166e-05   0.0135932
 VAT1L         205.7969      -1.011764  0.235260  -4.30063 1.70314e-05   0.0151086
 VSTM2L        228.2737      -0.843274  0.204483  -4.12393 3.72461e-05   0.0313892
 RASL10B        24.6211      -1.274863 0.3110886  -4.09807 4.16607e-05   0.0334376
 LOC122152560   63.4500      -1.971245 0.4964229  -3.97090 7.16017e-05   0.0548566
 CDK15          45.5785      -0.760158 0.1949913  -3.89842 9.68222e-05   0.0709538
 TRMT12        416.9359      -0.340318 0.0875363  -3.88774 1.01182e-04   0.0710592
 LOC122153333   68.0285      -3.397165 0.8810007  -3.85603 1.15243e-04   0.0776969
 RASSF2        302.9169      -0.375663 0.0985785  -3.81080 0.000138518   0.0864712
 SYNGR3        271.6928      -1.038348 0.2721083  -3.81594 0.000135667   0.0864712
 RAB3C          34.0305      -1.305939 0.3455325  -3.77950 0.000157145   0.0945957
  #almost the same genes
 
 #color
 resultsNames(ddsva1)
 #[1] "Intercept"          "SV1"                "SV2"                "V126I_VV_vs_VI"     "color_white_vs_red"
 
 #Mcolor
 
 Results.color.va <-results(ddsva1, name="color_white_vs_red" ) 
 
 sum(Results.color.va$pvalue <= 0.05, na.rm=T) #613
 sum(Results.color.va$pvalue <= 0.1, na.rm=T) # 1217
 
 sum(Results.color.va$padj <= 0.05, na.rm=T) #2
 sum(Results.color.va$padj <= 0.1, na.rm=T) #2
 
 rescolor.va<-results(ddsva1, name="color_white_vs_red", alpha=0.05)
 rescolor.va<-rescolor.va[order(rescolor.va$padj), ]
 
 head(rescolor.va, n=10)
 log2 fold change (MLE): color white vs red 
 Wald test p-value: color white vs red 
 DataFrame with 10 rows and 6 columns
 baseMean log2FoldChange     lfcSE      stat      pvalue      padj
 <numeric>      <numeric> <numeric> <numeric>   <numeric> <numeric>
   CDO1          281.5108       0.465500 0.0999900   4.65546 3.23257e-06 0.0446382
 LOC122153583  897.1858      -3.495607 0.7678135  -4.55268 5.29674e-06 0.0446382
 CFAP20       1672.5346      -0.234133 0.0580961  -4.03010 5.57523e-05 0.2186605
 LCT            11.7267       1.335483 0.3375992   3.95582 7.62712e-05 0.2186605
 LOC116965900  180.4829       0.360251 0.0911806   3.95096 7.78382e-05 0.2186605
 LOC122152834  226.1335      -0.959339 0.2333858  -4.11053 3.94750e-05 0.2186605
 CCDC157        50.5948      -0.464135 0.1245203  -3.72738 1.93478e-04 0.2993247
 LOC104366301  280.6519      -0.423403 0.1107515  -3.82300 1.31837e-04 0.2993247
 LOC116960700  110.4647       0.598028 0.1605462   3.72496 1.95347e-04 0.2993247
 LOC116964884  161.4160      -0.684816 0.1820744  -3.76119 1.69109e-04 0.2993247
 
# trainMod = model.matrix(~V126I+color,colData(dds))
#trainMod0 = model.matrix(~1,colData(dds))
# trainSv = sva(trainData,trainMod,trainMod0)
 ?svaseq
 
 #pheno = pData(bladderEset); pheno
 #bladderEset #list deseq
 #edata = exprs(bladderEset)  
}
#####DE analysis#######
#analyses with V126I and color
{ 
  setwd("/Users/aroulinn/Documents/sequencing_results/RNAseq/RNAseq2016/Analyses_DE/Kallisto/NewKallisto2021/Kallisto_V4_2021/Analyses2022")
load("male.gene.V4.Kal.woL4_8_14_29.filtered.RData") 

#visualising the count of each samples
male.info_woL4_8_14_29$V126I <- as.factor(male.info_woL4_8_14_29$V126I) 
male.info_woL4_8_14_29$color <- as.factor(male.info_woL4_8_14_29$color)
male.info_woL4_8_14_29$cPoiYA <- as.factor(male.info_woL4_8_14_29$cPoiYA)

model.dds <- DESeqDataSetFromMatrix(countData = as.matrix(male.gene.V4.Kal.woL4_8_14_29.filtered), colData = male.info_woL4_8_14_29, design = ~ V126I + color)

model.dds
#class: DESeqDataSet 
#dim: 16855 33 
#metadata(1): version
#assays(1): counts
#rownames(16855): A1CF A4GALT ... ZZEF1 ZZZ3
#rowData names(0):
##  colnames(33): 1 2 ... 46 47
#colData names(66): ExperimentalGroups RingNumber ... SeasonAndAge season
assayNames(model.dds)
#[1] "counts"
colData(model.dds) #gives the samples info: male info


analyis.model.dds <- DESeq(model.dds)
#estimating size factors
#estimating dispersions
#gene-wise dispersion estimates
#mean-dispersion relationship
#final dispersion estimates
#fitting model and testing
#-- replacing outliers and refitting for 20 genes
#-- DESeq argument 'minReplicatesForReplace' = 7 
#-- original counts are preserved in counts(dds)
#estimating dispersions
#fitting model and testing

resultsNames(analyis.model.dds)
#[1] "Intercept"          "V126I_VV_vs_VI"     "color_white_vs_red"

#MC1R

Results.MC1R <-results(analyis.model.dds, name="V126I_VV_vs_VI" ) 

sum(Results.MC1R$pvalue <= 0.05, na.rm=T) #869
sum(Results.MC1R$pvalue <= 0.1, na.rm=T) # 1934

sum(Results.MC1R$padj <= 0.05, na.rm=T) #26
sum(Results.MC1R$padj <= 0.1, na.rm=T) #26

resMC1R<-results(analyis.model.dds, name="V126I_VV_vs_VI", alpha=0.05)
resMC1R<-resMC1R[order(resMC1R$padj), ]
resMC1R1_26<-resMC1R[order(resMC1R$padj), ][1:26,]; View(resMC1R1_26)
head(resMC1R, n=26)

#log2 fold change (MLE): V126I VV vs VI 
#Wald test p-value: V126I VV vs VI 
#DataFrame with 10 rows and 6 columns
#baseMean log2FoldChange     lfcSE      stat      pvalue        padj
#<numeric>      <numeric> <numeric> <numeric>   <numeric>   <numeric>
#  SLC45A2       456.7508      -3.673215  0.565345  -6.49730 8.17769e-11 4.59314e-07
#TYR           436.5690      -3.613970  0.554024  -6.52313 6.88550e-11 4.59314e-07
#TYRP1         237.5592      -6.797898  1.021994  -6.65160 2.89922e-11 4.59314e-07
#CALB1          39.8009       2.528783  0.417738   6.05351 1.41722e-09 5.97005e-06
#LOC122152587  128.0277      -4.617292  0.767759  -6.01398 1.81018e-09 6.10032e-06 prefoldin subunit 2-like (LOC122152587), mRNA
#MFSD12        937.7148      -0.726591  0.130681  -5.56002 2.69751e-08 7.57550e-05
#SLC6A4        973.6899      -1.422934  0.263234  -5.40558 6.45986e-08 1.55498e-04
#DDC          1376.4680      -1.939886  0.366179  -5.29764 1.17306e-07 2.47076e-04
#PMEL         4817.3497      -1.463374  0.277621  -5.27112 1.35591e-07 2.53857e-04
#MLANA        1616.9996      -1.289518  0.256723  -5.02299 5.08726e-07 8.57203e-04
#GPR143        368.9167       -1.44669  0.299771  -4.82598 1.39319e-06  0.00203912
#LOC104357634   36.3226       -1.89809  0.393982  -4.81770 1.45220e-06  0.00203912 #fibronectin type III domain-containing protein 9-like (LOC104357634), 
#VAT1L         205.7969       -1.15111  0.248640  -4.62961 3.66357e-06  0.00474855
#LOC116960911  126.8977       -1.01390  0.223268  -4.54121 5.59330e-06  0.00673194 #killer cell lectin-like receptor subfamily B member 1B allele C 
#SYNGR3        271.6928       -1.16129  0.257512  -4.50968 6.49262e-06  0.00729337
#RAB38         888.2883      -1.180422  0.268759  -4.39212 1.12252e-05   0.0118215
#TBXA2R        158.7929      -0.758863  0.174172  -4.35697 1.31872e-05   0.0130709
#RASL10B        24.6211      -1.465246  0.337594  -4.34026 1.42317e-05   0.0133224
#LOC116960306  144.7439      -0.926108  0.215182  -4.30384 1.67866e-05   0.0148871 #flocculation protein FLO11 (LOC116960306), mRNA
#VSTM2L        228.2737      -0.837143  0.199258  -4.20129 2.65397e-05   0.0223597
#CDK15          45.5785      -0.972069  0.238027  -4.08385 4.42955e-05   0.0317140
#FOSB           32.5493      -1.827987  0.446451  -4.09449 4.23108e-05   0.0317140
#RAB3C          34.0305      -1.420687 0.3481770  -4.08036 4.49665e-05   0.0317140
#TRMT12        416.9359      -0.364437 0.0893382  -4.07930 4.51713e-05   0.0317140
#LOC104368820   50.4680      -2.488808 0.6149292  -4.04731 5.18099e-05   0.0349199 #VIP
#LOC104360559   43.7438      -0.970522 0.2422589  -4.00613 6.17206e-05   0.0399997 #sodium/nucleoside cotransporter 2 


summary(resMC1R)

#ut of 16855 with nonzero total read count
adjusted p-value < 0.05
LFC > 0 (up)       : 1, 0.0059%
LFC < 0 (down)     : 25, 0.15%
outliers [1]       : 5, 0.03%
low counts [2]     : 0, 0%
(mean count < 1)
[1] see 'cooksCutoff' argument of ?results
[2] see 'independentFiltering' argument of ?results
setwd("/Users/aroulinn/Documents/sequencing_results/RNAseq/RNAseq2016/Analyses_DE/Kallisto/NewKallisto2021/Kallisto_V4_2021/Analyses2022")

write.table(resMC1R, file="/Users/aroulinn/Documents/sequencing_results/RNAseq/RNAseq2016/Analyses_DE/Kallisto/NewKallisto2021/Kallisto_V4_2021/Analyses2022/Kallisto_gene_V4_MC1R_wcolor.txt", row.names=TRUE, col.names=TRUE)
names(resMC1R)
xname<-c("p-values of MC1R DE genes")
hist(resMC1R$pvalue, main = paste("Histogram of" , xname),xlab = xname, breaks=39, xaxp = c(0.0, 1.0, 10), yaxp=c(0, 600, 5))



#Figure Heatmap for the DE genes#####
{ { https://sebastianraschka.com/Articles/heatmaps_in_r.html
  https://davetang.org/muse/2018/05/15/making-a-heatmap-in-r-with-the-pheatmap-package/
  #########################################################
  ### A) Installing and loading required packages
  #########################################################
  if (!require("gplots")) {
    install.packages("gplots", dependencies = TRUE)
    library(gplots)
  }
  if (!require("RColorBrewer")) {
    install.packages("RColorBrewer", dependencies = TRUE)
    library(RColorBrewer)
  }
 #########################################################
  ### B) Reading in data and transform it into matrix format
  #########################################################
  
 # data <- read.csv("../datasets/heatmaps_in_r.csv", comment.char="#")
 # rnames <- data[,1]                            # assign labels in column 1 to "rnames"
 # mat_data <- data.matrix(data[,2:ncol(data)])  # transform column 2-5 into a matrix
  #rownames(mat_data) <- rnames                  # assign row names
 

 vsd <- vst(model.dds,blind=TRUE)
  
  #create a matrix with only the DE genes with all Lib and with the MC1R and color
  resMC1R1_26<-resMC1R[order(resMC1R$padj), ][1:26,]; View(resMC1R1_26)
  colnames(resMC1R1_26)
  #[1] "baseMean"       "log2FoldChange" "lfcSE"          "stat"           "pvalue"         "padj"   
  resMC1R1_26$gene<- row.names(resMC1R1_26)
  
  setwd("/Users/aroulinn/Documents/sequencing_results/RNAseq/RNAseq2016/Analyses_DE/Kallisto/NewKallisto2021/Kallisto_V4_2021")
  
  save(resMC1R1_26, file="resMC1R1_26.RData")
  load("resMC1R1_26.RData") 
  dim(resMC1R1_26) #26 6
  View(resMC1R1_26)
  
  vsd.sign <- vsd[ rownames(vsd) %in% rownames(resMC1R1_26), ]
  head(vsd.sign)
  View(vsd.sign)
  dim(vsd.sign)   
  str(vsd.sign)
  
  setwd("/Users/aroulinn/Documents/sequencing_results/RNAseq/RNAseq2016/Analyses_DE/Kallisto/NewKallisto2021/Kallisto_V4_2021")
  
  save(vsd.sign, file="vsd.sign.RData")
  load("vsd.sign.RData") 
  

 #do the pheatmap with only MC1R
      
 {    mat  <- assay(vsd.sign)[,1:ncol(vsd.sign)]
      mat  <- mat - rowMeans(mat)
      MC1R<-colData(vsd.sign)[ , c("V126I")]
      row.names(mat) <- colnames(assay(vsd.sign))
      anno <- as.data.frame(MC1R)
      my_colour = list(
          "MC1R" = c("VI" = "purple", "VV" = "plum"))
     # rownames(anno) <- colnames(assay(vsd.sign)[,1:ncol(vsd.sign)])
      rownames(anno) <- colnames(mat)
             
      
      
      b<- pheatmap(mat, annotation_col = anno, annotation_colors = my_colour, treeheight_row = 0, treeheight_col = 0)
      b
      
      
  
 }
 